{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "awesomeTitleTest",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "submittedBy",
          "type": "address"
        }
      ],
      "name": "SolutionSubmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "theHash",
          "type": "bytes32"
        }
      ],
      "name": "HashCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "theString",
          "type": "string"
        }
      ],
      "name": "AddSolutionCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "aString",
          "type": "string"
        }
      ],
      "name": "TestingYo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "aString",
          "type": "string"
        }
      ],
      "name": "AwesomeTitleTest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "aString",
          "type": "string"
        }
      ],
      "name": "AwesomeTitleTest2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "isSuccessful",
          "type": "bool"
        }
      ],
      "name": "AwesomeTitleMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testFunction",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "pa",
          "type": "uint256[2]"
        },
        {
          "name": "pb",
          "type": "uint256[2][2]"
        },
        {
          "name": "pc",
          "type": "uint256[2]"
        },
        {
          "name": "i",
          "type": "uint256[2]"
        },
        {
          "name": "to",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pa\",\"type\":\"uint256[2]\"},{\"name\":\"pb\",\"type\":\"uint256[2][2]\"},{\"name\":\"pc\",\"type\":\"uint256[2]\"},{\"name\":\"i\",\"type\":\"uint256[2]\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"awesomeTitleTest\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"testFunction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"submittedBy\",\"type\":\"address\"}],\"name\":\"SolutionSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"theHash\",\"type\":\"bytes32\"}],\"name\":\"HashCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"theString\",\"type\":\"string\"}],\"name\":\"AddSolutionCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"aString\",\"type\":\"string\"}],\"name\":\"TestingYo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"aString\",\"type\":\"string\"}],\"name\":\"AwesomeTitleTest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"aString\",\"type\":\"string\"}],\"name\":\"AwesomeTitleTest2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"isSuccessful\",\"type\":\"bool\"}],\"name\":\"AwesomeTitleMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/AwesomeTitle.sol\":{\"keccak256\":\"0x413b814ff70b4b070d8b43dc93e5e83fa3fb240e1086bf8218d8da01ef678219\",\"urls\":[\"bzzr://827410dd3d7866e4f74b487981c88191cfafab2181cda355b3d5d85ee683f7cb\"]},\"/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xcb03795fe7bbe0bfe0390f354aa2d10ad6f7179250ee63c79f23b801e5267cd4\",\"urls\":[\"bzzr://c2a1bf4c94a9336b68da6761f72d942d1a0ed9f4a046d8372b27c2851ebb7acb\"]},\"/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol\":{\"keccak256\":\"0x4b978fc8c3a409a33db8dcc1ebe7865d62cced224138eb206d41cf36cdf8fa04\",\"urls\":[\"bzzr://0ed8816067840adbddbb90679896a8a155eef5ad357cb3fc929e053a0cbcdcf6\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzzr://cea53b805426e40efadb24f2613aca39182462e9ecd23fde7aacf0c4b5885aaf\"]},\"@openzeppelin/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xf6826c684d51ca28db5293ce11a54c5cca1c757b6cd32b87613833c65086f995\",\"urls\":[\"bzzr://01b2756ab5b41b1d7ccadfeac53fbdce9c889263f1e011329c300c5fa3fda65f\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xac2eacd7e7762e275442f28f21d821544df5aae2ed7698af13be8c41b7005e2e\",\"urls\":[\"bzzr://43e901f6f210568ebc1d3591da3ce6a9d10796b854767a9c6e3da10305a8a332\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzzr://fc2ba15143ce3a00268ecd15fc98eb2469b18bfe27a64bbab0ac6446f161c739\"]},\"@openzeppelin/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x609f8cb524cd6b502624c79c099ec2fc6f23eef57b5c38e28efd82490875f37e\",\"urls\":[\"bzzr://46ee461a64298ef418bd100df1301355f4dc9ffeb06fe7a39aaf98d45c0bf988\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzzr://a7dfb6fc259d0074da840a848461487567e2a6309105dd5c050a4e025f0fa7cb\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xf151df411bbf4eaef1fc8e8480cd10c2cd985f1a36517e63981517610213efc1\",\"urls\":[\"bzzr://9bca20c0c1208be8f31fc7a73faccd2fca4c5f84dc0a432ae2e066970551db34\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xb42cb5a7471d98114af8f7050e7d08dfd543f432713a8aee72a45ce9485f5bed\",\"urls\":[\"bzzr://b0d4d8eb319d67dc4b5def23d48a84806dcd6492782c176309da449903e58766\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x908d0d6fd8d30cffb1fe9fce1f7db6802cb885fbe88d2f170539e8dcc6afa946\",\"urls\":[\"bzzr://691f4df66b5aa95410d8205f7afcd90e5f066d13513392ab797b2c9ce2f4f669\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe5e28b1a405164faa98f8ecd8ed2b00907b89e3d58b2b2bb8ac8b12bc5714489\",\"urls\":[\"bzzr://5a804c3710e9eca0a111db4536b0c5d23bf4a66734a9856f3df2992900ed8f28\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0x4c77825e3ce795c18c96af2985f702eff03dc660b25026b2754d90b64058f6ab\",\"urls\":[\"bzzr://3e8f76912935d64c6cf6b3209cb81858c3abea8b91fca68a7bfd1a005fdefd42\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xce48937a8007c580b8e2e35705738c922dd17540de89ebee6df06d2917a3f9fc\",\"urls\":[\"bzzr://de494d3843e2c151aa108782382720b5d9f4531f0aa620a4244ca12fc1f8a780\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f417765736f6d655469746c6500000000000000000000000000000000000000008152506040518060400160405280600481526020017f444545440000000000000000000000000000000000000000000000000000000081525081816200009133620002af60201b60201c565b6000600160006101000a81548160ff021916908315150217905550620000c46301ffc9a760e01b6200031060201b60201c565b620000dc6380ac58cd60e01b6200031060201b60201c565b620000f463780e9d6360e01b6200031060201b60201c565b81600b90805190602001906200010c9291906200063f565b5080600c9080519060200190620001259291906200063f565b506200013e635b5e139f60e01b6200031060201b60201c565b5050505062000153336200041a60201b60201c565b33600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a37f4098b352452230ea930d67f8facfd384517785aa9126fcf14ba93b94b8180fdb60405180806020018281038252602481526020018062005dff6024913960400191505060405180910390a17f01a87e7a3d231b634c1b6d4af78b689c56e577b096c765c761a9d79d482cd42760405180806020018281038252602d81526020018062005dd2602d913960400191505060405180910390a1620006ee565b620002ca8160006200047b60201b620047461790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620003ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b600160026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200043581600e6200047b60201b620047461790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6200048d82826200055f60201b60201c565b1562000501576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620005e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062005db06022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200068257805160ff1916838001178555620006b3565b82800160010185558215620006b3579182015b82811115620006b257825182559160200191906001019062000695565b5b509050620006c29190620006c6565b5090565b620006eb91905b80821115620006e7576000816000905550600101620006cd565b5090565b90565b6156b280620006fe6000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c806370a082311161013057806398650275116100b8578063c87b56dd1161007c578063c87b56dd14610f14578063d3fc986414610fbb578063e16b4a9b146110b8578063e985e9c51461113b578063f2fde38b146111b757610227565b80639865027514610cd6578063a22cb46514610ce0578063aa271e1a14610d30578063b3fe201114610d8c578063b88d4fde14610e0f57610227565b80638a823fbe116100ff5780638a823fbe14610b1e5780638da5cb5b14610ba35780638f32d59b14610bed57806395d89b4114610c0f578063983b2d5614610c9257610227565b806370a0823114610a6e578063715018a614610ac657806382dc1ec414610ad05780638456cb5914610b1457610227565b80633f4ba83a116101b35780634f6ccce7116101825780634f6ccce7146108195780635c975abb1461085b578063621e9ec01461087d5780636352211e146109f65780636ef8d66d14610a6457610227565b80633f4ba83a146106df57806340c10f19146106e957806342842e0e1461074f57806346fbf68e146107bd57610227565b806318160ddd116101fa57806318160ddd146103d057806323b872dd146103ee57806327dc297e1461045c5780632f745c591461052157806338bbfa501461058357610227565b806301ffc9a71461022c57806306fdde0314610291578063081812fc14610314578063095ea7b314610382575b600080fd5b6102776004803603602081101561024257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506111fb565b604051808215151515815260200191505060405180910390f35b610299611263565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d95780820151818401526020810190506102be565b50505050905090810190601f1680156103065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103406004803603602081101561032a57600080fd5b8101908080359060200190929190505050611305565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ce6004803603604081101561039857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113a0565b005b6103d8611579565b6040518082815260200191505060405180910390f35b61045a6004803603606081101561040457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611586565b005b61051f6004803603604081101561047257600080fd5b81019080803590602001909291908035906020019064010000000081111561049957600080fd5b8201836020820111156104ab57600080fd5b803590602001918460018302840111640100000000831117156104cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115f5565b005b61056d6004803603604081101561053757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611638565b6040518082815260200191505060405180910390f35b6106dd6004803603606081101561059957600080fd5b8101908080359060200190929190803590602001906401000000008111156105c057600080fd5b8201836020820111156105d257600080fd5b803590602001918460018302840111640100000000831117156105f457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065757600080fd5b82018360208201111561066957600080fd5b8035906020019184600183028401116401000000008311171561068b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116f7565b005b6106e76116fc565b005b610735600480360360408110156106ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061185c565b604051808215151515815260200191505060405180910390f35b6107bb6004803603606081101561076557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118d0565b005b6107ff600480360360208110156107d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118f0565b604051808215151515815260200191505060405180910390f35b6108456004803603602081101561082f57600080fd5b810190808035906020019092919050505061190d565b6040518082815260200191505060405180910390f35b61086361198d565b604051808215151515815260200191505060405180910390f35b6109dc600480360361014081101561089457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610949578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906108f5565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506119a4565b604051808215151515815260200191505060405180910390f35b610a2260048036036020811015610a0c57600080fd5b8101908080359060200190929190505050611beb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a6c611cb3565b005b610ab060048036036020811015610a8457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cbe565b6040518082815260200191505060405180910390f35b610ace611d93565b005b610b1260048036036020811015610ae657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ece565b005b610b1c611f38565b005b610b896004803603610160811015610b3557600080fd5b8101908080604001909192919290806080019091929192908060400190919291929080604001909192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612098565b604051808215151515815260200191505060405180910390f35b610bab612538565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610bf5612562565b604051808215151515815260200191505060405180910390f35b610c176125ba565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c57578082015181840152602081019050610c3c565b50505050905090810190601f168015610c845780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610cd460048036036020811015610ca857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061265c565b005b610cde6126c6565b005b610d2e60048036036040811015610cf657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506126d1565b005b610d7260048036036020811015610d4657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612874565b604051808215151515815260200191505060405180910390f35b610d94612891565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dd4578082015181840152602081019050610db9565b50505050905090810190601f168015610e015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f1260048036036080811015610e2557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610e8c57600080fd5b820183602082011115610e9e57600080fd5b80359060200191846001830284011164010000000083111715610ec057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612919565b005b610f4060048036036020811015610f2a57600080fd5b810190808035906020019092919050505061298b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f80578082015181840152602081019050610f65565b50505050905090810190601f168015610fad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61109e60048036036060811015610fd157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561101857600080fd5b82018360208201111561102a57600080fd5b8035906020019184600183028401116401000000008311171561104c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612a9e565b604051808215151515815260200191505060405180910390f35b6110c0612b7d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111005780820151818401526020810190506110e5565b50505050905090810190601f16801561112d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61119d6004803603604081101561115157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612bfa565b604051808215151515815260200191505060405180910390f35b6111f9600480360360208110156111cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c8e565b005b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112fb5780601f106112d0576101008083540402835291602001916112fb565b820191906000526020600020905b8154815290600101906020018083116112de57829003601f168201915b5050505050905090565b600061131082612d14565b611365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806154d3602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006113ab82611beb565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611432576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806155ca6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061147257506114718133612bfa565b5b6114c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806153d56038913960400191505060405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600980549050905090565b6115903382612d86565b6115e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806155eb6031913960400191505060405180910390fd5b6115f0838383612e7a565b505050565b611634828260006040519080825280601f01601f19166020018201604052801561162e5781602001600182028038833980820191505090505b506116f7565b5050565b600061164383611cbe565b821061169a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018061529f602b913960400191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106116e457fe5b9060005260206000200154905092915050565b505050565b611705336118f0565b61175a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806152fc6030913960400191505060405180910390fd5b600160009054906101000a900460ff166117dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061186733612874565b6118bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806154606030913960400191505060405180910390fd5b6118c68383612e9e565b6001905092915050565b6118eb83838360405180602001604052806000815250612919565b505050565b6000611906826000612ebf90919063ffffffff16565b9050919050565b6000611917611579565b821061196e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061565b602c913960400191505060405180910390fd5b6009828154811061197b57fe5b90600052602060002001549050919050565b6000600160009054906101000a900460ff16905090565b60006119ae61503c565b6040518060400160405280876000600281106119c657fe5b60200201518152602001876001600281106119dd57fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110611a1057fe5b6020020151600060028110611a2157fe5b6020020151815260200188600060028110611a3857fe5b6020020151600160028110611a4957fe5b60200201518152508152602001604051806040016040528088600160028110611a6e57fe5b6020020151600060028110611a7f57fe5b6020020151815260200188600160028110611a9657fe5b6020020151600160028110611aa757fe5b60200201518152508152508160200181905250604051806040016040528085600060028110611ad257fe5b6020020151815260200185600160028110611ae957fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611b2b5781602001602082028038833980820191505090505b50905060008090505b6002811015611b7357848160028110611b4957fe5b6020020151828281518110611b5a57fe5b6020026020010181815250508080600101915050611b34565b506000611b808284612f9d565b1415611bdc577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001806154b16022913960400191505060405180910390a1600192505050611be3565b6000925050505b949350505050565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611caa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806154376029913960400191505060405180910390fd5b80915050919050565b611cbc3361310f565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061540d602a913960400191505060405180910390fd5b611d8c600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613169565b9050919050565b611d9b612562565b611e0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611ed7336118f0565b611f2c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806152fc6030913960400191505060405180910390fd5b611f3581613177565b50565b611f41336118f0565b611f96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806152fc6030913960400191505060405180910390fd5b600160009054906101000a900460ff1615612019576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b60018060006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60007f9fe701af713820c8db29ef40f4e42f170626962cb1c9443cf9b55b1fa75a9e9d6040518080602001828103825260128152602001807f492068617665206265656e2063616c6c6564000000000000000000000000000081525060200191505060405180910390a16000868686866040516020018085600260200280828437808301925050508460026040028082843780830192505050836002602002808284378083019250505082600260200280828437808301925050509450505050506040516020818303038152906040528051906020012090507f1659ad673497ce57a4db5c1bdea2d6f0470485d867eea6f72de074cd91ce4500816040518082815260200191505060405180910390a1600015156121b682856131d1565b15151461220e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806153a26033913960400191505060405180910390fd5b600080905061221b615070565b8281600001818152505084816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050601760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f1b45dbfed9eed246b93226fc0d3554b49038083c727099f41936fc86daa89e5633604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160006124a18a6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508a600280602002604051908101604052809291906000905b82821015612428578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906123d4565b505050508a6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050508a6002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050506119a4565b9050600115158115151461251d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468697320736f6c7574696f6e206973206e6f742076616c696400000000000081525060200191505060405180910390fd5b612526866132f4565b92508294505050505095945050505050565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6060600c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126525780601f1061262757610100808354040283529160200191612652565b820191906000526020600020905b81548152906001019060200180831161263557829003601f168201915b5050505050905090565b61266533612874565b6126ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806154606030913960400191505060405180910390fd5b6126c381613365565b50565b6126cf336133bf565b565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612773576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b600061288a82600e612ebf90919063ffffffff16565b9050919050565b60607f9b8632543f9271d60587df495e216b6b2cd0c5c7f6ec5ff48d89f540830e14d66040518080602001828103825260128152602001807f417765736f6d65205469746c652054657374000000000000000000000000000081525060200191505060405180910390a160405180606001604052806025815260200161557660259139905090565b612924848484611586565b61293084848484613419565b612985576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806152ca6032913960400191505060405180910390fd5b50505050565b606061299682612d14565b6129eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061559b602f913960400191505060405180910390fd5b600d60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a925780601f10612a6757610100808354040283529160200191612a92565b820191906000526020600020905b815481529060010190602001808311612a7557829003601f168201915b50505050509050919050565b6000612aa8612562565b612b1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000809050612b298585612e9e565b612b338484613602565b600190507f6f24cf36bfd89e3dbb90646858861aef2b00e5027c88411a24cafe1a12f6006881604051808215151515815260200191505060405180910390a1809150509392505050565b60607f01a87e7a3d231b634c1b6d4af78b689c56e577b096c765c761a9d79d482cd4276040518080602001828103825260128152602001807f544849532049532041205445535420594f21000000000000000000000000000081525060200191505060405180910390a16060612bf1612891565b90508091505090565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612c96612562565b612d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612d118161368c565b50565b6000806003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000612d9182612d14565b612de6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615376602c913960400191505060405180910390fd5b6000612df183611beb565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612e6057508373ffffffffffffffffffffffffffffffffffffffff16612e4884611305565b73ffffffffffffffffffffffffffffffffffffffff16145b80612e715750612e708185612bfa565b5b91505092915050565b612e858383836137d2565b612e8f8382613a2d565b612e998282613bcb565b505050565b612ea88282613c92565b612eb28282613bcb565b612ebb81613eaa565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612f46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061552b6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050612fcb6150a3565b612fd3613ef6565b9050806080015151600186510114612fea57600080fd5b612ff26150eb565b6040518060400160405280600081526020016000815250905060008090505b8651811015613088578387828151811061302757fe5b60200260200101511061303957600080fd5b613079826130748560800151600185018151811061305357fe5b60200260200101518a858151811061306757fe5b6020026020010151614344565b6143d8565b91508080600101915050613011565b506130ab81836080015160008151811061309e57fe5b60200260200101516143d8565b90506130f1856000015186602001516130c38461448b565b85604001516130d58a6040015161448b565b87606001516130e7896000015161448b565b8960200151614525565b6131015760019350505050613109565b600093505050505b92915050565b61312381600061468990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600081600001549050919050565b61318b81600061474690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600080601760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050141561322657600090506132ee565b6000809050601760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156132ec5783601760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106132c057fe5b90600052602060002090600202016000015414156132e25760019150506132ee565b60009150506132ee565b505b92915050565b60006133006015614821565b600061330c6015613169565b9050606061331982614837565b9050600080905060606133446040518060600160405280603f815260200161561c603f913984614964565b90506000613353878684612a9e565b90508092508295505050505050919050565b61337981600e61474690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6133d381600e61468990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600061343a8473ffffffffffffffffffffffffffffffffffffffff166149a8565b61344757600190506135fa565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613522578082015181840152602081019050613507565b50505050905090810190601f16801561354f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561357157600080fd5b505af1158015613585573d6000803e3d6000fd5b505050506040513d602081101561359b57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b61360b82612d14565b613660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806154ff602c913960400191505060405180910390fd5b80600d60008481526020019081526020016000209080519060200190613687929190615105565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061532c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff166137f282611beb565b73ffffffffffffffffffffffffffffffffffffffff161461385e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061554d6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156138e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806153526024913960400191505060405180910390fd5b6138ed816149bb565b613934600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614a79565b61397b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614821565b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000613a856001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050614a9c90919063ffffffff16565b9050600060086000848152602001908152602001600020549050818114613b72576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110613af257fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110613b4a57fe5b9060005260206000200181905550816008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003613bc49190615185565b5050505050565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613d35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b613d3e81612d14565b15613db1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613e4a600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020614821565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b613efe6150a3565b60405180604001604052807f0a7247fbc95a55003ef5f027d9d9a8a8f8905fd415108d78881da8000751117a81526020017f2568ce6b03f61e427ded3064934d40380a7fda36d166733abd875526351ee1318152508160000181905250604051806040016040528060405180604001604052807f1947e45d4de0782ccd4d111c6f76cf36cc123cfeed30162c99245f7c0db3e87081526020017f2a78162e847a85f1a13fddc2794fb028c17baf6cb0236aeb1a1502d8d15ba988815250815260200160405180604001604052807f0a9e8e2a3758fa11aafdfbea2f2701edc68975eb7001bc4f2398b82c011ae97281526020017f13b73ada8e5eedeb47536e4bdc9eac06a7c20dbb7e8bd3814ba5b53d23c5a1a98152508152508160200181905250604051806040016040528060405180604001604052807f224e4f2849eaa1277d195896660fd2b99913bba376c2f1e6b22d2cbdcdac8ce981526020017f282141797428d629e0049685f245f3f3e8e74176e9d646b041df83ec0dc79402815250815260200160405180604001604052807f0a64511938d74748a8b96290068abb0ccebbb2a78d802104d57697bc5cc851e081526020017f224adcd18d76be30206f2e4c37bd1d17268cf15d591ba2e54e358d4868656d898152508152508160400181905250604051806040016040528060405180604001604052807f1b30a15cf69460231dda3b8b394e8b774921b21976753c868ff2c6ad43be49a981526020017f1ff2165fa8def3ac7f1ac7d073bcfd2b9f774fc5995c3585ff6edbccb2b6dbbd815250815260200160405180604001604052807f0f8c0bf3f23faa402a4840b83fd251c69c96c7346ceb7a087c281aa4a2b2391b81526020017f22ec5d2cfa161c19e25e677b9dc4c37dee363e6320e1086c601531f3c6a4039d815250815250816060018190525060036040519080825280602002602001820160405280156141e557816020015b6141d26151b1565b8152602001906001900390816141ca5790505b50816080018190525060405180604001604052807f05bca1db84378bd9227f186b29eaacd139bd1b3f06d158bee4f69156d071da6a81526020017f1bf4f47d4173c98dc15dbc177652a63a77a0613275203fad51524febd4ccd0ab815250816080015160008151811061425457fe5b602002602001018190525060405180604001604052807f1676571a3689001528dafe3dd01857af3753484eddf02afa0d9d95e08f172ad381526020017f101326dca086eebad2efa5da7ee8c23b38990265aa3e82870a2cf9c39cff8f2d81525081608001516001815181106142c557fe5b602002602001018190525060405180604001604052807f16c040dddca77bac24423d6ba3c07648d22db7c9f3522a096505247ee4a0186c81526020017f092013931ce9a9ad43228649775494f28c5771f206a9ac027eeff29d18802b3f815250816080015160028151811061433657fe5b602002602001018190525090565b61434c6150eb565b6143546151cb565b83600001518160006003811061436657fe5b60200201818152505083602001518160016003811061438157fe5b602002018181525050828160026003811061439857fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146143c3576143c5565bfe5b50806143d057600080fd5b505092915050565b6143e06150eb565b6143e86151ed565b8360000151816000600481106143fa57fe5b60200201818152505083602001518160016004811061441557fe5b60200201818152505082600001518160026004811061443057fe5b60200201818152505082602001518160036004811061444b57fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461447657614478565bfe5b508061448357600080fd5b505092915050565b6144936150eb565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156144d0575060008360200151145b156144f4576040518060400160405280600081526020016000815250915050614520565b6040518060400160405280846000015181526020018285602001518161451657fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561456457816020015b6145516151b1565b8152602001906001900390816145495790505b509050606060046040519080825280602002602001820160405280156145a457816020015b61459161520f565b8152602001906001900390816145895790505b5090508a826000815181106145b557fe5b602002602001018190525088826001815181106145ce57fe5b602002602001018190525086826002815181106145e757fe5b6020026020010181905250848260038151811061460057fe5b6020026020010181905250898160008151811061461957fe5b6020026020010181905250878160018151811061463257fe5b6020026020010181905250858160028151811061464b57fe5b6020026020010181905250838160038151811061466457fe5b60200260200101819052506146798282614b25565b9250505098975050505050505050565b6146938282612ebf565b6146e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806154906021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6147508282612ebf565b156147c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6001816000016000828254019250508190555050565b6060600082141561487f576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061495f565b600082905060005b600082146148a9578080600101915050600a82816148a157fe5b049150614887565b6060816040519080825280601f01601f1916602001820160405280156148de5781602001600182028038833980820191505090505b50905060006001830390505b6000861461495757600a86816148fc57fe5b0660300160f81b8282806001900393508151811061491657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161494f57fe5b0495506148ea565b819450505050505b919050565b60606149a08383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250614d7a565b905092915050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614614a765760006004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b614a9160018260000154614a9c90919063ffffffff16565b816000018190555050565b600082821115614b14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008151835114614b3557600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015614b745781602001602082028038833980820191505090505b50905060008090505b83811015614d1a57868181518110614b9157fe5b602002602001015160000151826000600684020181518110614baf57fe5b602002602001018181525050868181518110614bc757fe5b602002602001015160200151826001600684020181518110614be557fe5b602002602001018181525050858181518110614bfd57fe5b602002602001015160000151600060028110614c1557fe5b6020020151826002600684020181518110614c2c57fe5b602002602001018181525050858181518110614c4457fe5b602002602001015160000151600160028110614c5c57fe5b6020020151826003600684020181518110614c7357fe5b602002602001018181525050858181518110614c8b57fe5b602002602001015160200151600060028110614ca357fe5b6020020151826004600684020181518110614cba57fe5b602002602001018181525050858181518110614cd257fe5b602002602001015160200151600160028110614cea57fe5b6020020151826005600684020181518110614d0157fe5b6020026020010181815250508080600101915050614b7d565b50614d23615235565b60006020826020860260208601600060086107d05a03f190508060008114614d4a57614d4c565bfe5b5080614d5757600080fd5b600082600060018110614d6657fe5b602002015114159550505050505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015614dd65781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015614e5b57888181518110614e0257fe5b602001015160f81c60f81b838380600101945081518110614e1f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614ded565b600090505b8751811015614ece57878181518110614e7557fe5b602001015160f81c60f81b838380600101945081518110614e9257fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614e60565b600090505b8651811015614f4157868181518110614ee857fe5b602001015160f81c60f81b838380600101945081518110614f0557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614ed3565b600090505b8551811015614fb457858181518110614f5b57fe5b602001015160f81c60f81b838380600101945081518110614f7857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614f46565b600090505b845181101561502757848181518110614fce57fe5b602001015160f81c60f81b838380600101945081518110614feb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614fb9565b82995050505050505050505095945050505050565b6040518061010001604052806150506151b1565b815260200161505d61520f565b815260200161506a6151b1565b81525090565b604051806040016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b604051806101e001604052806150b76151b1565b81526020016150c461520f565b81526020016150d161520f565b81526020016150de61520f565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061514657805160ff1916838001178555615174565b82800160010185558215615174579182015b82811115615173578251825591602001919060010190615158565b5b5090506151819190615257565b5090565b8154818355818111156151ac578183600052602060002091820191016151ab9190615257565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806080016040528061522261527c565b815260200161522f61527c565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61527991905b8082111561527557600081600090555060010161525d565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c654f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e536f6c7574696f6e2068617320616c7265616479206265656e207375626d6974746564206279207468697320616464726573734552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c655472616e73616374696f6e207375636365737366756c6c792076657269666965642e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e417765736f6d655469746c6520546573742046756e6374696f6e207761732043616c6c65644552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656468747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a72305820497237042dc82ae4ae00cbb790972c0b7debd2a22fae81e745d9484e229ab1890029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e7374727563746f7220666f7220536f6c6e537175617265566572696669657220697320576f726b696e67436f6e7374727563746f7220666f7220417765736f6d655469746c6520776f726b696e67",
  "deployedBytecode": "",
  "sourceMap": "355:3547:3:-;;;1209:114;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:114:3;452:155:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:4;535:6;275:22:7;286:10;275;;;:22;;:::i;:::-;985:5:11;975:7;;:15;;;;;;;;;;;;;;;;;;718:40:9;385:10;737:20;;718:18;;;:40;;:::i;:::-;2220::14;2094:10;2239:20;;2220:18;;;:40;;:::i;:::-;1316:51:15;1131:10;1335:31;;1316:18;;;:51;;:::i;:::-;833:4:17;825:5;:12;;;;;;;;;;;;:::i;:::-;;857:6;847:7;:16;;;;;;;;;;;;:::i;:::-;;951:49;687:10;970:29;;951:18;;;:49;;:::i;:::-;753:254;;452:155:16;;275:22:6;286:10;275;;;:22;;:::i;:::-;666:10:13;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;696:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;355:3547;;737:119:7;793:21;806:7;793:8;:12;;;;;;:21;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;1442:190:9:-;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;737:119:6:-;793:21;806:7;793:8;:12;;;;;;:21;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;260:175:5:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;355:3547:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "355:3547:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;355:3547:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1112:83:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1112:83:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4237:200:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4237:200:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3541:411;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3541:411:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2130:94:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5877:285:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5877:285:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;1748:229:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1748:229:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;1852:115:11;;;:::i;:::-;;444:132:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;444:132:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6795::14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6795:132:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;447:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;447:107:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2562:196:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2562:196:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1092:76:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;23963:732:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2897:223:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2897:223:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;656:75:7;;;:::i;:::-;;2471:207:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2471:207:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1599:137:13;;;:::i;:::-;;560:90:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;560:90:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;1649:113:11;;;:::i;:::-;;2240:939:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2240:939:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;814:77:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1304:87:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1304:87:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:90:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;560:90:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;656:75;;;:::i;:::-;;4730:243:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4730:243:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;447:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;447:107:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1158:173:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1158:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265:14;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7632:265:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7632:265:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7632:265:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7632:265:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7632:265:14;;;;;;;;;;;;;;;:::i;:::-;;1591:202:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1591:202:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1591:202:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:340:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;814:340:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;814:340:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;814:340:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;814:340:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;814:340:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1329:202:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1329:202:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5295:145:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5295:145:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1885:107:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;915:133:9;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1112:83:17:-;1151:13;1183:5;1176:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:83;:::o;4237:200:14:-;4296:7;4323:16;4331:7;4323;:16::i;:::-;4315:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4406:15;:24;4422:7;4406:24;;;;;;;;;;;;;;;;;;;;;4399:31;;4237:200;;;:::o;3541:411::-;3604:13;3620:16;3628:7;3620;:16::i;:::-;3604:32;;3660:5;3654:11;;:2;:11;;;;3646:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3736:5;3722:19;;:10;:19;;;:58;;;;3745:35;3762:5;3769:10;3745:16;:35::i;:::-;3722:58;3714:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3900:2;3873:15;:24;3889:7;3873:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3937:7;3933:2;3917:28;;3926:5;3917:28;;;;;;;;;;;;3541:411;;;:::o;2130:94:15:-;2174:7;2200:10;:17;;;;2193:24;;2130:94;:::o;5877:285:14:-;6019:39;6038:10;6050:7;6019:18;:39::i;:::-;6011:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:32;6137:4;6143:2;6147:7;6123:13;:32::i;:::-;5877:285;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;1748:229:15:-;1828:7;1863:16;1873:5;1863:9;:16::i;:::-;1855:5;:24;1847:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1944:12;:19;1957:5;1944:19;;;;;;;;;;;;;;;1964:5;1944:26;;;;;;;;;;;;;;;;1937:33;;1748:229;;;;:::o;14929:166:2:-;;;;:::o;1852:115:11:-;350:20:7;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:7:11;;;;;;;;;;;1504:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:5;1910:7;;:15;;;;;;;;;;;;;;;;;;1940:20;1949:10;1940:20;;;;;;;;;;;;;;;;;;;;;;1852:115::o;444:132:18:-;514:4;350:20:6;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:18:18;536:2;540:7;530:5;:18::i;:::-;565:4;558:11;;444:132;;;;:::o;6795::14:-;6881:39;6898:4;6904:2;6908:7;6881:39;;;;;;;;;;;;:16;:39::i;:::-;6795:132;;;:::o;447:107:7:-;503:4;526:21;539:7;526:8;:12;;:21;;;;:::i;:::-;519:28;;447:107;;;:::o;2562:196:15:-;2620:7;2655:13;:11;:13::i;:::-;2647:5;:21;2639:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2734:10;2745:5;2734:17;;;;;;;;;;;;;;;;2727:24;;2562:196;;;:::o;1092:76:11:-;1131:4;1154:7;;;;;;;;;;;1147:14;;1092:76;:::o;23963:732:4:-;24134:6;24152:18;;:::i;:::-;24190:27;;;;;;;;24206:1;24208;24206:4;;;;;;;;;;;24190:27;;;;24212:1;24214;24212:4;;;;;;;;;;;24190:27;;;24180:5;:7;;:37;;;;24237:55;;;;;;;;;;;;;;;;24254:1;24256;24254:4;;;;;;;;;;;24259:1;24254:7;;;;;;;;;;;24237:55;;;;24263:1;24265;24263:4;;;;;;;;;;;24268:1;24263:7;;;;;;;;;;;24237:55;;;;;;;;;;;;;;;24274:1;24276;24274:4;;;;;;;;;;;24279:1;24274:7;;;;;;;;;;;24237:55;;;;24283:1;24285;24283:4;;;;;;;;;;;24288:1;24283:7;;;;;;;;;;;24237:55;;;;;;24227:5;:7;;:65;;;;24312:27;;;;;;;;24328:1;24330;24328:4;;;;;;;;;;;24312:27;;;;24334:1;24336;24334:4;;;;;;;;;;;24312:27;;;24302:5;:7;;:37;;;;24349:25;24388:12;24377:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24377:24:4;;;;24349:52;;24415:6;24424:1;24415:10;;24411:88;24431:12;24427:1;:16;24411:88;;;24480:5;24486:1;24480:8;;;;;;;;;;;24463:11;24475:1;24463:14;;;;;;;;;;;;;:25;;;;;24445:3;;;;;;;24411:88;;;;24542:1;24512:26;24519:11;24532:5;24512:6;:26::i;:::-;:31;24508:181;;;24564:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24631:4;24624:11;;;;;;24508:181;24673:5;24666:12;;;;23963:732;;;;;;;:::o;2897:223:14:-;2952:7;2971:13;2987:11;:20;2999:7;2987:20;;;;;;;;;;;;;;;;;;;;;2971:36;;3042:1;3025:19;;:5;:19;;;;3017:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:5;3101:12;;;2897:223;;;:::o;656:75:7:-;699:25;713:10;699:13;:25::i;:::-;656:75::o;2471:207:14:-;2526:7;2570:1;2553:19;;:5;:19;;;;2545:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2637:34;:17;:24;2655:5;2637:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2630:41;;2471:207;;;:::o;1599:137:13:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;560:90:7:-;350:20;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:19;635:7;624:10;:19::i;:::-;560:90;:::o;1649:113:11:-;350:20:7;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:7:11;;;;;;;;;;;1320:8;1312:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:4;1708:7;;:14;;;;;;;;;;;;;;;;;;1737:18;1744:10;1737:18;;;;;;;;;;;;;;;;;;;;;;1649:113::o;2240:939:3:-;2385:4;2410:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:15;2504:2;2508;2512;2516:1;2487:31;;;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2487:31:3;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2487:31:3;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2487:31:3;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2487:31:3;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2487:31:3;;;2477:42;;;;;;2459:60;;2534:20;2546:7;2534:20;;;;;;;;;;;;;;;;;;2603:5;2572:36;;:27;2587:7;2596:2;2572:14;:27::i;:::-;:36;;;2564:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2674:13;2690:5;2674:21;;2784:27;;:::i;:::-;2848:7;2821:11;:24;;:34;;;;;2891:2;2865:11;:23;;:28;;;;;;;;;;;2903:18;:22;2922:2;2903:22;;;;;;;;;;;;;;;2931:11;2903:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2903:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2958:29;2976:10;2958:29;;;;;;;;;;;;;;;;;;;;;;2998:20;3021;3030:2;3021:20;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3021:20:3;;;;;3033:2;3021:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3021:20:3;;;;;;;;;;;;;;;;;;;;3036:2;3021:20;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3021:20:3;;;;;3039:1;3021:20;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3021:20:3;;;;;:8;:20::i;:::-;2998:43;;3078:4;3059:23;;:15;:23;;;3051:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3135:12;3144:2;3135:8;:12::i;:::-;3124:23;;3164:8;3157:15;;;;;;2240:939;;;;;;;:::o;814:77:13:-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;1304:87:17:-;1345:13;1377:7;1370:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:87;:::o;560:90:6:-;350:20;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:19;635:7;624:10;:19::i;:::-;560:90;:::o;656:75::-;699:25;713:10;699:13;:25::i;:::-;656:75::o;4730:243:14:-;4815:10;4809:16;;:2;:16;;;;4801:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4903:8;4866:18;:30;4885:10;4866:30;;;;;;;;;;;;;;;:34;4897:2;4866:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4953:2;4926:40;;4941:10;4926:40;;;4957:8;4926:40;;;;;;;;;;;;;;;;;;;;;;4730:243;;:::o;447:107:6:-;503:4;526:21;539:7;526:8;:12;;:21;;;;:::i;:::-;519:28;;447:107;;;:::o;1158:173:0:-;1205:13;1233:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1278:47;;;;;;;;;;;;;;;;;;;1158:173;:::o;7632:265:14:-;7738:31;7751:4;7757:2;7761:7;7738:12;:31::i;:::-;7787:48;7810:4;7816:2;7820:7;7829:5;7787:22;:48::i;:::-;7779:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265;;;;:::o;1591:202:17:-;1649:13;1682:16;1690:7;1682;:16::i;:::-;1674:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:10;:19;1778:7;1767:19;;;;;;;;;;;1760:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:202;;;:::o;814:340:0:-;912:4;1018:9:13;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:12:0;941:5;926:20;;953:18;959:2;963:7;953:5;:18::i;:::-;977:30;990:7;998:8;977:12;:30::i;:::-;1023:4;1013:14;;1039:25;1056:7;1039:25;;;;;;;;;;;;;;;;;;;;;;1142:7;1135:14;;;814:340;;;;;:::o;1329:202:3:-;1374:13;1408:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1449:25;1477:18;:16;:18::i;:::-;1449:46;;1512:11;1505:19;;;1329:202;:::o;5295:145:14:-;5375:4;5398:18;:25;5417:5;5398:25;;;;;;;;;;;;;;;:35;5424:8;5398:35;;;;;;;;;;;;;;;;;;;;;;;;;5391:42;;5295:145;;;;:::o;1885:107:13:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;8092:152:14:-;8149:4;8165:13;8181:11;:20;8193:7;8181:20;;;;;;;;;;;;;;;;;;;;;8165:36;;8235:1;8218:19;;:5;:19;;;;8211:26;;;8092:152;;;:::o;8605:329::-;8690:4;8714:16;8722:7;8714;:16::i;:::-;8706:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8789:13;8805:16;8813:7;8805;:16::i;:::-;8789:32;;8850:5;8839:16;;:7;:16;;;:51;;;;8883:7;8859:31;;:20;8871:7;8859:11;:20::i;:::-;:31;;;8839:51;:87;;;;8894:32;8911:5;8918:7;8894:16;:32::i;:::-;8839:87;8831:96;;;8605:329;;;;:::o;3133:239:15:-;3218:38;3238:4;3244:2;3248:7;3218:19;:38::i;:::-;3267:47;3300:4;3306:7;3267:32;:47::i;:::-;3325:40;3353:2;3357:7;3325:27;:40::i;:::-;3133:239;;;:::o;3629:196::-;3692:24;3704:2;3708:7;3692:11;:24::i;:::-;3727:40;3755:2;3759:7;3727:27;:40::i;:::-;3778;3810:7;3778:31;:40::i;:::-;3629:196;;:::o;779:200:5:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;23019:909:4:-;23094:4;23110:26;23139:77;23110:106;;23226:22;;:::i;:::-;23251:14;:12;:14::i;:::-;23226:39;;23303:2;:12;;;:19;23298:1;23283:5;:12;:16;:39;23275:48;;;;;;23380:27;;:::i;:::-;23410:21;;;;;;;;23426:1;23410:21;;;;23429:1;23410:21;;;23380:51;;23446:6;23455:1;23446:10;;23441:197;23462:5;:12;23458:1;:16;23441:197;;;23514:18;23503:5;23509:1;23503:8;;;;;;;;;;;;;;:29;23495:38;;;;;;23554:73;23571:4;23577:49;23596:2;:12;;;23613:1;23609;:5;23596:19;;;;;;;;;;;;;;23617:5;23623:1;23617:8;;;;;;;;;;;;;;23577:18;:49::i;:::-;23554:16;:73::i;:::-;23547:80;;23476:3;;;;;;;23441:197;;;;23654:39;23671:4;23677:2;:12;;;23690:1;23677:15;;;;;;;;;;;;;;23654:16;:39::i;:::-;23647:46;;23707:186;23742:5;:7;;;23751:5;:7;;;23773:20;23788:4;23773:14;:20::i;:::-;23795:2;:8;;;23818:23;23833:5;:7;;;23818:14;:23::i;:::-;23843:2;:8;;;23866:20;23881:2;:4;;;23866:14;:20::i;:::-;23888:2;:4;;;23707:20;:186::i;:::-;23703:200;;23902:1;23895:8;;;;;;;23703:200;23920:1;23913:8;;;;;23019:909;;;;;:::o;862:127:7:-;921:24;937:7;921:8;:15;;:24;;;;:::i;:::-;974:7;960:22;;;;;;;;;;;;862:127;:::o;1063:112:8:-;1128:7;1154;:14;;;1147:21;;1063:112;;;:::o;737:119:7:-;793:21;806:7;793:8;:12;;:21;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;1537:614:3:-;1624:4;1689:1;1648:18;:30;1667:10;1648:30;;;;;;;;;;;;;;;:37;;;;:42;1644:500;;;1713:5;1706:12;;;;1644:500;1816:6;1825:1;1816:10;;1832:18;:30;1851:10;1832:30;;;;;;;;;;;;;;;:37;;;;1828:1;:41;1812:322;;;1947:7;1897:18;:30;1916:10;1897:30;;;;;;;;;;;;;;;1928:1;1897:33;;;;;;;;;;;;;;;;;;:46;;;:57;1894:169;;;1984:4;1977:11;;;;;1894:169;2087:5;2080:12;;;;;1812:322;;1537:614;;;;;:::o;3463:437::-;3518:4;3538:21;:9;:19;:21::i;:::-;3569:17;3589:19;:9;:17;:19::i;:::-;3569:39;;3618:24;3645:19;3654:9;3645:8;:19::i;:::-;3618:46;;3674:12;3689:5;3674:20;;3704:22;3747:36;3757:13;;;;;;;;;;;;;;;;;3772:10;3747:9;:36::i;:::-;3736:47;;3794:13;3810:29;3815:2;3819:9;3830:8;3810:4;:29::i;:::-;3794:45;;3860:8;3850:18;;3886:7;3879:14;;;;;;;3463:437;;;:::o;737:119:6:-;793:21;806:7;793:8;:12;;:21;;;;:::i;:::-;841:7;829:20;;;;;;;;;;;;737:119;:::o;862:127::-;921:24;937:7;921:8;:15;;:24;;;;:::i;:::-;974:7;960:22;;;;;;;;;;;;862:127;:::o;11771:347:14:-;11892:4;11917:15;:2;:13;;;:15::i;:::-;11912:58;;11955:4;11948:11;;;;11912:58;11980:13;12012:2;11996:36;;;12033:10;12045:4;12051:7;12060:5;11996:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11996:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:70:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11996:70:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11996:70:14;;;;;;;;;;;;;;;;11980:86;;713:10;12094:16;;12084:26;;;:6;:26;;;;12076:35;;;11771:347;;;;;;;:::o;2032:192:17:-;2117:16;2125:7;2117;:16::i;:::-;2109:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2214:3;2192:10;:19;2203:7;2192:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;2032:192;;:::o;2093:225:13:-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o;10751:447:14:-;10864:4;10844:24;;:16;10852:7;10844;:16::i;:::-;:24;;;10836:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10946:1;10932:16;;:2;:16;;;;10924:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11000:23;11015:7;11000:14;:23::i;:::-;11034:35;:17;:23;11052:4;11034:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11079:33;:17;:21;11097:2;11079:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11146:2;11123:11;:20;11135:7;11123:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11183:7;11179:2;11164:27;;11173:4;11164:27;;;;;;;;;;;;10751:447;;;:::o;6241:1128:15:-;6503:22;6528:32;6558:1;6528:12;:18;6541:4;6528:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6503:57;;6570:18;6591:17;:26;6609:7;6591:26;;;;;;;;;;;;6570:47;;6735:14;6721:10;:28;6717:323;;6765:19;6787:12;:18;6800:4;6787:18;;;;;;;;;;;;;;;6806:14;6787:34;;;;;;;;;;;;;;;;6765:56;;6869:11;6836:12;:18;6849:4;6836:18;;;;;;;;;;;;;;;6855:10;6836:30;;;;;;;;;;;;;;;:44;;;;6985:10;6952:17;:30;6970:11;6952:30;;;;;;;;;;;:43;;;;6717:323;;7126:12;:18;7139:4;7126:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6241:1128;;;;:::o;5087:183::-;5200:12;:16;5213:2;5200:16;;;;;;;;;;;;;;;:23;;;;5171:17;:26;5189:7;5171:26;;;;;;;;;;;:52;;;;5233:12;:16;5246:2;5233:16;;;;;;;;;;;;;;;5255:7;5233:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5233:30:15;;;;;;;;;;;;;;;;;;;;;;5087:183;;:::o;9179:327:14:-;9264:1;9250:16;;:2;:16;;;;9242:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9322:16;9330:7;9322;:16::i;:::-;9321:17;9313:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9405:2;9382:11;:20;9394:7;9382:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9417:33;:17;:21;9435:2;9417:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9491:7;9487:2;9466:33;;9483:1;9466:33;;;;;;;;;;;;9179:327;;:::o;5465:161:15:-;5568:10;:17;;;;5541:15;:24;5557:7;5541:24;;;;;;;;;;;:44;;;;5595:10;5611:7;5595:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5595:24:15;;;;;;;;;;;;;;;;;;;;;;5465:161;:::o;21070:1944:4:-;21117:22;;:::i;:::-;21158:169;;;;;;;;21182:66;21158:169;;;;21259:66;21158:169;;;21151:2;:4;;:176;;;;21344:327;;;;;;;;;;;;;;;;21369:66;21344:327;;;;21446:66;21344:327;;;;;;;;;;;;;;;21525:66;21344:327;;;;21602:66;21344:327;;;;;;21337:2;:4;;:334;;;;21692:327;;;;;;;;;;;;;;;;21717:66;21692:327;;;;21794:66;21692:327;;;;;;;;;;;;;;;21873:66;21692:327;;;;21950:66;21692:327;;;;;;21681:2;:8;;:338;;;;22040:327;;;;;;;;;;;;;;;;22065:66;22040:327;;;;22142:66;22040:327;;;;;;;;;;;;;;;22221:66;22040:327;;;;22298:66;22040:327;;;;;;22029:2;:8;;:338;;;;22414:1;22392:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22377:2;:12;;:39;;;;22444:169;;;;;;;;22468:66;22444:169;;;;22545:66;22444:169;;;22426:2;:12;;;22439:1;22426:15;;;;;;;;;;;;;:187;;;;22641:169;;;;;;;;22665:66;22641:169;;;;22742:66;22641:169;;;22623:2;:12;;;22636:1;22623:15;;;;;;;;;;;;;:187;;;;22838:169;;;;;;;;22862:66;22838:169;;;;22939:66;22838:169;;;22820:2;:12;;;22833:1;22820:15;;;;;;;;;;;;;:187;;;;21070:1944;:::o;17613:444::-;17677:16;;:::i;:::-;17705:20;;:::i;:::-;17746:1;:3;;;17735:5;17741:1;17735:8;;;;;;;;;;:14;;;;;17770:1;:3;;;17759:5;17765:1;17759:8;;;;;;;;;;:14;;;;;17794:1;17783:5;17789:1;17783:8;;;;;;;;;;:12;;;;;17805;17904:4;17901:1;17895:4;17888:5;17885:1;17882;17875:4;17870:3;17866:14;17861:48;17850:59;;17986:7;17999:1;17994:20;;;;17979:35;;17994:20;18003:9;17979:35;;18042:7;18033:17;;;;;;17613:444;;;;;;:::o;16701:483::-;16775:16;;:::i;:::-;16803:20;;:::i;:::-;16844:2;:4;;;16833:5;16839:1;16833:8;;;;;;;;;;:15;;;;;16869:2;:4;;;16858:5;16864:1;16858:8;;;;;;;;;;:15;;;;;16894:2;:4;;;16883:5;16889:1;16883:8;;;;;;;;;;:15;;;;;16919:2;:4;;;16908:5;16914:1;16908:8;;;;;;;;;;:15;;;;;16933:12;17032:4;17029:1;17023:4;17016:5;17013:1;17010;17003:4;16998:3;16994:14;16989:48;16978:59;;17114:7;17127:1;17122:20;;;;17107:35;;17122:20;17131:9;17107:35;;17169:7;17161:16;;;;;;16701:483;;;;;;:::o;16312:340::-;16369:14;;:::i;:::-;16447:6;16456:77;16447:86;;16554:1;16547;:3;;;:8;:20;;;;;16566:1;16559;:3;;;:8;16547:20;16543:58;;;16588:13;;;;;;;;16596:1;16588:13;;;;16599:1;16588:13;;;16581:20;;;;;16543:58;16618:27;;;;;;;;16626:1;:3;;;16618:27;;;;16642:1;16636;:3;;;:7;;;;;;16631:1;:13;16618:27;;;16611:34;;;16312:340;;;;:::o;20179:547::-;20425:4;20441:19;20477:1;20463:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20441:38;;20489:19;20525:1;20511:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20489:38;;20545:2;20537;20540:1;20537:5;;;;;;;;;;;;;:10;;;;20565:2;20557;20560:1;20557:5;;;;;;;;;;;;;:10;;;;20585:2;20577;20580:1;20577:5;;;;;;;;;;;;;:10;;;;20605:2;20597;20600:1;20597:5;;;;;;;;;;;;;:10;;;;20625:2;20617;20620:1;20617:5;;;;;;;;;;;;;:10;;;;20645:2;20637;20640:1;20637:5;;;;;;;;;;;;;:10;;;;20665:2;20657;20660:1;20657:5;;;;;;;;;;;;;:10;;;;20685:2;20677;20680:1;20677:5;;;;;;;;;;;;;:10;;;;20704:15;20712:2;20716;20704:7;:15::i;:::-;20697:22;;;;20179:547;;;;;;;;;;:::o;510:180:5:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;1181:89:8:-;1262:1;1244:7;:14;;;:19;;;;;;;;;;;1181:89;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;542:413:23:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o;12280:171:14:-;12379:1;12343:38;;:15;:24;12359:7;12343:24;;;;;;;;;;;;;;;;;;;;;:38;;;12339:106;;12432:1;12397:15;:24;12413:7;12397:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12339:106;12280:171;:::o;1276:108:8:-;1356:21;1375:1;1356:7;:14;;;:18;;:21;;;;:::i;:::-;1339:7;:14;;:38;;;;1276:108;:::o;1274:179:12:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;18268:913:4:-;18345:4;18382:2;:9;18369:2;:9;:22;18361:31;;;;;;18402:13;18418:2;:9;18402:25;;18437:14;18465:1;18454:8;:12;18437:29;;18476:19;18509:9;18498:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18498:21:4;;;;18476:43;;18534:6;18543:1;18534:10;;18529:307;18550:8;18546:1;:12;18529:307;;;18606:2;18609:1;18606:5;;;;;;;;;;;;;;:7;;;18587:5;18601:1;18597;18593;:5;:9;18587:16;;;;;;;;;;;;;:26;;;;;18646:2;18649:1;18646:5;;;;;;;;;;;;;;:7;;;18627:5;18641:1;18637;18633;:5;:9;18627:16;;;;;;;;;;;;;:26;;;;;18686:2;18689:1;18686:5;;;;;;;;;;;;;;:7;;;18694:1;18686:10;;;;;;;;;;;18667:5;18681:1;18677;18673;:5;:9;18667:16;;;;;;;;;;;;;:29;;;;;18729:2;18732:1;18729:5;;;;;;;;;;;;;;:7;;;18737:1;18729:10;;;;;;;;;;;18710:5;18724:1;18720;18716;:5;:9;18710:16;;;;;;;;;;;;;:29;;;;;18772:2;18775:1;18772:5;;;;;;;;;;;;;;:7;;;18780:1;18772:10;;;;;;;;;;;18753:5;18767:1;18763;18759;:5;:9;18753:16;;;;;;;;;;;;;:29;;;;;18815:2;18818:1;18815:5;;;;;;;;;;;;;;:7;;;18823:1;18815:10;;;;;;;;;;;18796:5;18810:1;18806;18802;:5;:9;18796:16;;;;;;;;;;;;;:29;;;;;18560:3;;;;;;;18529:307;;;;18845:18;;:::i;:::-;18873:12;19001:4;18996:3;18989:4;18978:9;18974:20;18967:4;18960:5;18956:16;18953:1;18950;18943:4;18938:3;18934:14;18929:77;18918:88;;19083:7;19096:1;19091:20;;;;19076:35;;19091:20;19100:9;19076:35;;19138:7;19130:16;;;;;;19173:1;19163:3;19167:1;19163:6;;;;;;;;;;;:11;;19156:18;;;;;;;18268:913;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;355:3547:3:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;355:3547:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;355:3547:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;355:3547:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;355:3547:3;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n// TODO: define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./Verifier.sol\";\nimport \"./AwesomeTitle.sol\";\nimport \"@openzeppelin/contracts/drafts/Counters.sol\";\n\n\n\n// DONE define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is AwesomeTitle, Verifier {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n    string internal constant _baseTokenURI = \"https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/\";\n\n    // DONE: define a solutions struct that can hold an index & an address\n    struct Solution {\n        bytes32 solutionHash;\n        address someAddress;\n    }\n\n    // DONE: define an array of the above struct\n    Solution[]  solutions;\n\n    // DONE: define a mapping to store unique solutions submitted\n    mapping(address => Solution[]) submittedSolutions;\n\n    // DONE: Create an event to emit when a solution is added\n    event SolutionSubmitted(address submittedBy);\n\n    event HashCreated(bytes32 theHash);\n    event AddSolutionCalled(string theString);\n    event TestingYo(string aString);\n\n    constructor() AwesomeTitle() public {\n        emit TestingYo(\"Constructor for SolnSquareVerifier is Working\");\n  }\n\n    function testFunction() external\n    returns(string memory)\n    {\n        emit TestingYo(\"THIS IS A TEST YO!\");\n        string memory deepMessage = awesomeTitleTest();\n        return(deepMessage);\n    }\n\n    function solutionExists(bytes32 theHash, address theAddress)\n    internal\n    returns (bool)\n    {\n        if (submittedSolutions[theAddress].length == 0) {\n            return false;\n        } else { // address has submitted solutions, need to iterate over them.\n            for(uint i = 0; i < submittedSolutions[theAddress].length; i++) {\n                if(submittedSolutions[theAddress][i].solutionHash == theHash){\n                    return true; // solution has already been submitted by this address.\n                }\n                return false; // this is a new solution.\n            }\n        }\n\n    }\n\n    // DONE Create a function to add the solutions to the array and emit the event\n    function addSolution(uint[2] calldata pa, uint[2][2] calldata pb, uint[2] calldata pc, uint[2] calldata i, address to)\n    external\n    returns (bool)\n    {\n        emit AddSolutionCalled(\"I have been called\");\n        bytes32 newHash = keccak256(abi.encodePacked(pa, pb, pc, i));\n        emit HashCreated(newHash);\n        require(solutionExists(newHash, to) == false, \"Solution has already been submitted by this address\");\n        bool isMinted = false;\n\n\n        // Solution doesn't already exist, add to solutions for this address\n        Solution memory newSolution;\n        newSolution.solutionHash = newHash;\n        newSolution.someAddress = to;\n        submittedSolutions[to].push(newSolution);\n        emit SolutionSubmitted(msg.sender);\n\n        bool solutionIsValid = verifyTx(pa,pb,pc,i);\n        require(solutionIsValid == true, \"This solution is not valid\");\n\n        isMinted = newTitle(to);\n        return isMinted;\n    }\n\n    // DONE: Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n\n    // Creates a new title for an owner of a property.\n    function newTitle(address to)\n    internal\n    returns(bool)\n    {\n        _tokenIds.increment();\n        uint256 newItemId = _tokenIds.current();\n        string memory strTokenId = uint2str(newItemId);\n        bool success = false;\n        string memory tokenURI;\n        tokenURI = strConcat(_baseTokenURI, strTokenId);\n\n        bool isMinted = mint(to, newItemId, tokenURI);\n\n        success = isMinted;\n\n        return success;\n    }\n}\n",
  "sourcePath": "/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        6709
      ]
    },
    "id": 6710,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6422,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 6423,
        "nodeType": "ImportDirective",
        "scope": 6710,
        "sourceUnit": 9268,
        "src": "142:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/AwesomeTitle.sol",
        "file": "./AwesomeTitle.sol",
        "id": 6424,
        "nodeType": "ImportDirective",
        "scope": 6710,
        "sourceUnit": 96,
        "src": "167:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/drafts/Counters.sol",
        "file": "@openzeppelin/contracts/drafts/Counters.sol",
        "id": 6425,
        "nodeType": "ImportDirective",
        "scope": 6710,
        "sourceUnit": 9606,
        "src": "196:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6426,
              "name": "AwesomeTitle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 95,
              "src": "386:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AwesomeTitle_$95",
                "typeString": "contract AwesomeTitle"
              }
            },
            "id": 6427,
            "nodeType": "InheritanceSpecifier",
            "src": "386:12:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6428,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9267,
              "src": "400:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$9267",
                "typeString": "contract Verifier"
              }
            },
            "id": 6429,
            "nodeType": "InheritanceSpecifier",
            "src": "400:8:3"
          }
        ],
        "contractDependencies": [
          95,
          6420,
          9267,
          9452,
          9556,
          9657,
          9667,
          9752,
          9996,
          10561,
          10898,
          10922,
          11051,
          11079,
          11182,
          11209,
          11232
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6709,
        "linearizedBaseContracts": [
          6709,
          9267,
          95,
          6420,
          9996,
          11079,
          9452,
          10922,
          11051,
          11232,
          10898,
          11209,
          10561,
          11182,
          9657,
          9667,
          9752,
          9556
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6432,
            "libraryName": {
              "contractScope": null,
              "id": 6430,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9605,
              "src": "421:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$9605",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "415:36:3",
            "typeName": {
              "contractScope": null,
              "id": 6431,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9565,
              "src": "434:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9565_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 6434,
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "456:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$9565_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 6433,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9565,
              "src": "456:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9565_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 6437,
            "name": "_baseTokenURI",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "496:106:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 6435,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "496:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
              "id": 6436,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "537:65:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cfa4573958f09c487edb2f9856efbbf1d5e6472e1155243fcdb5ea3c5dfd2e5a",
                "typeString": "literal_string \"https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/\""
              },
              "value": "https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 6442,
            "members": [
              {
                "constant": false,
                "id": 6439,
                "name": "solutionHash",
                "nodeType": "VariableDeclaration",
                "scope": 6442,
                "src": "710:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 6438,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "710:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6441,
                "name": "someAddress",
                "nodeType": "VariableDeclaration",
                "scope": 6442,
                "src": "740:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6440,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 6709,
            "src": "684:82:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6445,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "821:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 6443,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 6442,
                "src": "821:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$6442_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 6444,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "821:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6450,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "915:49:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution[])"
            },
            "typeName": {
              "id": 6449,
              "keyType": {
                "id": 6446,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "923:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "915:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 6447,
                  "name": "Solution",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6442,
                  "src": "934:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Solution_$6442_storage_ptr",
                    "typeString": "struct SolnSquareVerifier.Solution"
                  }
                },
                "id": 6448,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "934:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6454,
            "name": "SolutionSubmitted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6452,
                  "indexed": false,
                  "name": "submittedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 6454,
                  "src": "1057:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:21:3"
            },
            "src": "1033:45:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6458,
            "name": "HashCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6456,
                  "indexed": false,
                  "name": "theHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 6458,
                  "src": "1102:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6455,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1101:17:3"
            },
            "src": "1084:35:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6462,
            "name": "AddSolutionCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6460,
                  "indexed": false,
                  "name": "theString",
                  "nodeType": "VariableDeclaration",
                  "scope": 6462,
                  "src": "1148:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6459,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1147:18:3"
            },
            "src": "1124:42:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6466,
            "name": "TestingYo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6464,
                  "indexed": false,
                  "name": "aString",
                  "nodeType": "VariableDeclaration",
                  "scope": 6466,
                  "src": "1187:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6463,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1186:16:3"
            },
            "src": "1171:32:3"
          },
          {
            "body": {
              "id": 6475,
              "nodeType": "Block",
              "src": "1245:78:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7374727563746f7220666f7220536f6c6e537175617265566572696669657220697320576f726b696e67",
                        "id": 6472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1270:47:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e351046b10c3afeef172f3dd76be946b55efb3c2dd3ab34fe3da50e3dea61725",
                          "typeString": "literal_string \"Constructor for SolnSquareVerifier is Working\""
                        },
                        "value": "Constructor for SolnSquareVerifier is Working"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e351046b10c3afeef172f3dd76be946b55efb3c2dd3ab34fe3da50e3dea61725",
                          "typeString": "literal_string \"Constructor for SolnSquareVerifier is Working\""
                        }
                      ],
                      "id": 6471,
                      "name": "TestingYo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "1260:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6474,
                  "nodeType": "EmitStatement",
                  "src": "1255:63:3"
                }
              ]
            },
            "documentation": null,
            "id": 6476,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 6469,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6468,
                  "name": "AwesomeTitle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "1223:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AwesomeTitle_$95_$",
                    "typeString": "type(contract AwesomeTitle)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1223:14:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:2:3"
            },
            "returnParameters": {
              "id": 6470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:3"
            },
            "scope": 6709,
            "src": "1209:114:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6493,
              "nodeType": "Block",
              "src": "1393:138:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "544849532049532041205445535420594f21",
                        "id": 6482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5324782bad6bc33ee8ff2a6dbb597cca8848b00ecf3d2c3782c1a7c4053f3e4",
                          "typeString": "literal_string \"THIS IS A TEST YO!\""
                        },
                        "value": "THIS IS A TEST YO!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e5324782bad6bc33ee8ff2a6dbb597cca8848b00ecf3d2c3782c1a7c4053f3e4",
                          "typeString": "literal_string \"THIS IS A TEST YO!\""
                        }
                      ],
                      "id": 6481,
                      "name": "TestingYo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "1408:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6484,
                  "nodeType": "EmitStatement",
                  "src": "1403:36:3"
                },
                {
                  "assignments": [
                    6486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6486,
                      "name": "deepMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 6493,
                      "src": "1449:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 6485,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1449:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6489,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6487,
                      "name": "awesomeTitleTest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1477:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () returns (string memory)"
                      }
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1449:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 6490,
                        "name": "deepMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6486,
                        "src": "1512:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 6491,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1511:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 6480,
                  "id": 6492,
                  "nodeType": "Return",
                  "src": "1505:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 6494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1350:2:3"
            },
            "returnParameters": {
              "id": 6480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6479,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6494,
                  "src": "1374:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6478,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1373:15:3"
            },
            "scope": 6709,
            "src": "1329:202:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6543,
              "nodeType": "Block",
              "src": "1634:517:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6503,
                          "name": "submittedSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6450,
                          "src": "1648:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                          }
                        },
                        "id": 6505,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6504,
                          "name": "theAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6498,
                          "src": "1667:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1648:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 6506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1648:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1689:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1648:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6541,
                    "nodeType": "Block",
                    "src": "1735:409:3",
                    "statements": [
                      {
                        "body": {
                          "id": 6539,
                          "nodeType": "Block",
                          "src": "1876:258:3",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 6532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 6525,
                                        "name": "submittedSolutions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6450,
                                        "src": "1897:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 6527,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 6526,
                                        "name": "theAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6498,
                                        "src": "1916:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1897:30:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                                      }
                                    },
                                    "id": 6529,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 6528,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6513,
                                      "src": "1928:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1897:33:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Solution_$6442_storage",
                                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                    }
                                  },
                                  "id": 6530,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "solutionHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6439,
                                  "src": "1897:46:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 6531,
                                  "name": "theHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6496,
                                  "src": "1947:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1897:57:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 6536,
                              "nodeType": "IfStatement",
                              "src": "1894:169:3",
                              "trueBody": {
                                "id": 6535,
                                "nodeType": "Block",
                                "src": "1955:108:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "hexValue": "74727565",
                                      "id": 6533,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1984:4:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 6502,
                                    "id": 6534,
                                    "nodeType": "Return",
                                    "src": "1977:11:3"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 6537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2087:5:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 6502,
                              "id": 6538,
                              "nodeType": "Return",
                              "src": "2080:12:3"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6516,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6513,
                            "src": "1828:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 6517,
                                "name": "submittedSolutions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6450,
                                "src": "1832:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                                }
                              },
                              "id": 6519,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 6518,
                                "name": "theAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6498,
                                "src": "1851:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1832:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                                "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                              }
                            },
                            "id": 6520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1832:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1828:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6540,
                        "initializationExpression": {
                          "assignments": [
                            6513
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 6513,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 6540,
                              "src": "1816:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 6512,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1816:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 6515,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 6514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1825:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1816:10:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 6523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1871:3:3",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 6522,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6513,
                              "src": "1871:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6524,
                          "nodeType": "ExpressionStatement",
                          "src": "1871:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "1812:322:3"
                      }
                    ]
                  },
                  "id": 6542,
                  "nodeType": "IfStatement",
                  "src": "1644:500:3",
                  "trueBody": {
                    "id": 6511,
                    "nodeType": "Block",
                    "src": "1692:37:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 6509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1713:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 6502,
                        "id": 6510,
                        "nodeType": "Return",
                        "src": "1706:12:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 6544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "solutionExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6496,
                  "name": "theHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 6544,
                  "src": "1561:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6495,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6498,
                  "name": "theAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6544,
                  "src": "1578:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:37:3"
            },
            "returnParameters": {
              "id": 6502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6501,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6544,
                  "src": "1624:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1623:6:3"
            },
            "scope": 6709,
            "src": "1537:614:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6654,
              "nodeType": "Block",
              "src": "2395:784:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "492068617665206265656e2063616c6c6564",
                        "id": 6570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2428:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe92b51bcf44da1b68cc835f5e15c60b81b8d39c7db1c211cf6a54fd91529607",
                          "typeString": "literal_string \"I have been called\""
                        },
                        "value": "I have been called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fe92b51bcf44da1b68cc835f5e15c60b81b8d39c7db1c211cf6a54fd91529607",
                          "typeString": "literal_string \"I have been called\""
                        }
                      ],
                      "id": 6569,
                      "name": "AddSolutionCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "2410:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2410:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6572,
                  "nodeType": "EmitStatement",
                  "src": "2405:44:3"
                },
                {
                  "assignments": [
                    6574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6574,
                      "name": "newHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2459:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6573,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2459:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6584,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6578,
                            "name": "pa",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6548,
                            "src": "2504:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6579,
                            "name": "pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6554,
                            "src": "2508:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata[2] calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6580,
                            "name": "pc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6558,
                            "src": "2512:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6581,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6562,
                            "src": "2516:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata[2] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6576,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11269,
                            "src": "2487:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2487:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2487:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6575,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11276,
                      "src": "2477:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2459:60:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6586,
                        "name": "newHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6574,
                        "src": "2546:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6585,
                      "name": "HashCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6458,
                      "src": "2534:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 6587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2534:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6588,
                  "nodeType": "EmitStatement",
                  "src": "2529:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6591,
                              "name": "newHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6574,
                              "src": "2587:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6592,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6564,
                              "src": "2596:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6590,
                            "name": "solutionExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6544,
                            "src": "2572:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 6593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2572:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 6594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2603:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2572:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e2068617320616c7265616479206265656e207375626d697474656420627920746869732061646472657373",
                        "id": 6596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:53:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d6bd88683efc577771fe0a03fc295f0ae96172e940156cc30aca01831ec3a51",
                          "typeString": "literal_string \"Solution has already been submitted by this address\""
                        },
                        "value": "Solution has already been submitted by this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d6bd88683efc577771fe0a03fc295f0ae96172e940156cc30aca01831ec3a51",
                          "typeString": "literal_string \"Solution has already been submitted by this address\""
                        }
                      ],
                      "id": 6589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11285,
                        11286
                      ],
                      "referencedDeclaration": 11286,
                      "src": "2564:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6598,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:100:3"
                },
                {
                  "assignments": [
                    6600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6600,
                      "name": "isMinted",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2674:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6599,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2674:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6602,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 6601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2690:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2674:21:3"
                },
                {
                  "assignments": [
                    6604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6604,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2784:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6603,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6442,
                        "src": "2784:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6605,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2784:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6606,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "2821:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 6608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "solutionHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6439,
                      "src": "2821:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6609,
                      "name": "newHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6574,
                      "src": "2848:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2821:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 6611,
                  "nodeType": "ExpressionStatement",
                  "src": "2821:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6612,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "2865:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 6614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "someAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6441,
                      "src": "2865:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6615,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6564,
                      "src": "2891:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2865:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6617,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6622,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "2931:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6618,
                          "name": "submittedSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6450,
                          "src": "2903:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                          }
                        },
                        "id": 6620,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6619,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6564,
                          "src": "2922:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2903:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 6621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2903:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$6442_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 6623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6624,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:40:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11282,
                          "src": "2976:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2976:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6625,
                      "name": "SolutionSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6454,
                      "src": "2958:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2958:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6629,
                  "nodeType": "EmitStatement",
                  "src": "2953:34:3"
                },
                {
                  "assignments": [
                    6631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6631,
                      "name": "solutionIsValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2998:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6630,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2998:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6638,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6633,
                        "name": "pa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6548,
                        "src": "3030:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6634,
                        "name": "pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6554,
                        "src": "3033:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6635,
                        "name": "pc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6558,
                        "src": "3036:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6636,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6562,
                        "src": "3039:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      ],
                      "id": 6632,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9266,
                      "src": "3021:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 6637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2998:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6640,
                          "name": "solutionIsValid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6631,
                          "src": "3059:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 6641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3078:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3059:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320736f6c7574696f6e206973206e6f742076616c6964",
                        "id": 6643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3084:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa199b7f016164b1eb1f3e521ea834e5bbfcec1f00835bebe82157889d73dce2",
                          "typeString": "literal_string \"This solution is not valid\""
                        },
                        "value": "This solution is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa199b7f016164b1eb1f3e521ea834e5bbfcec1f00835bebe82157889d73dce2",
                          "typeString": "literal_string \"This solution is not valid\""
                        }
                      ],
                      "id": 6639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11285,
                        11286
                      ],
                      "referencedDeclaration": 11286,
                      "src": "3051:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6645,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:62:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6646,
                      "name": "isMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6600,
                      "src": "3124:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6648,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6564,
                          "src": "3144:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6647,
                        "name": "newTitle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6708,
                        "src": "3135:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) returns (bool)"
                        }
                      },
                      "id": 6649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3135:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3124:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6651,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6652,
                    "name": "isMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6600,
                    "src": "3164:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6568,
                  "id": 6653,
                  "nodeType": "Return",
                  "src": "3157:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 6655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6548,
                  "name": "pa",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2261:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6545,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2261:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6547,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2266:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2261:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6554,
                  "name": "pb",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2282:22:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 6549,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2282:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6551,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 6550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2287:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2282:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 6553,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2290:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2282:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6558,
                  "name": "pc",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2306:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6555,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2306:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6557,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2311:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2306:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6562,
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2327:18:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6559,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2327:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6561,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2332:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2327:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6564,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2347:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2260:98:3"
            },
            "returnParameters": {
              "id": 6568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6567,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2385:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6566,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2384:6:3"
            },
            "scope": 6709,
            "src": "2240:939:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6707,
              "nodeType": "Block",
              "src": "3528:372:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6662,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "3538:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9565_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 6664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9588,
                      "src": "3538:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9565_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9565_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 6665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3538:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6666,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:21:3"
                },
                {
                  "assignments": [
                    6668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6668,
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3569:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6667,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3569:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6672,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6669,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "3589:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9565_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 6670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "3589:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9565_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9565_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 6671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3589:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3569:39:3"
                },
                {
                  "assignments": [
                    6674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6674,
                      "name": "strTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3618:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 6673,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3618:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6678,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6676,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6668,
                        "src": "3654:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6675,
                      "name": "uint2str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5268,
                      "src": "3645:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 6677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3645:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3618:46:3"
                },
                {
                  "assignments": [
                    6680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6680,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3674:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6679,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6682,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 6681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3689:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:20:3"
                },
                {
                  "assignments": [
                    6684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6684,
                      "name": "tokenURI",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3704:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 6683,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3704:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6685,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3704:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6686,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6684,
                      "src": "3736:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6688,
                          "name": "_baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6437,
                          "src": "3757:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 6689,
                          "name": "strTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6674,
                          "src": "3772:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 6687,
                        "name": "strConcat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4688,
                          4708,
                          4730,
                          4924
                        ],
                        "referencedDeclaration": 4688,
                        "src": "3747:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) pure returns (string memory)"
                        }
                      },
                      "id": 6690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3747:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3736:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 6692,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:47:3"
                },
                {
                  "assignments": [
                    6694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6694,
                      "name": "isMinted",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3794:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3794:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6696,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6657,
                        "src": "3815:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6697,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6668,
                        "src": "3819:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6698,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6684,
                        "src": "3830:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6695,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        81,
                        11078
                      ],
                      "referencedDeclaration": 81,
                      "src": "3810:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 6699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3810:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3794:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6701,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6680,
                      "src": "3850:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6702,
                      "name": "isMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6694,
                      "src": "3860:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3850:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6704,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6705,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6680,
                    "src": "3886:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6661,
                  "id": 6706,
                  "nodeType": "Return",
                  "src": "3879:14:3"
                }
              ]
            },
            "documentation": null,
            "id": 6708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newTitle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6657,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6708,
                  "src": "3481:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3480:12:3"
            },
            "returnParameters": {
              "id": 6661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6660,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6708,
                  "src": "3518:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3517:6:3"
            },
            "scope": 6709,
            "src": "3463:437:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 6710,
        "src": "355:3547:3"
      }
    ],
    "src": "0:3903:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        6709
      ]
    },
    "id": 6710,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6422,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 6423,
        "nodeType": "ImportDirective",
        "scope": 6710,
        "sourceUnit": 9268,
        "src": "142:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joshcork/Source/github/joshcork/Blockchain-Capstone/eth-contracts/contracts/AwesomeTitle.sol",
        "file": "./AwesomeTitle.sol",
        "id": 6424,
        "nodeType": "ImportDirective",
        "scope": 6710,
        "sourceUnit": 96,
        "src": "167:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/drafts/Counters.sol",
        "file": "@openzeppelin/contracts/drafts/Counters.sol",
        "id": 6425,
        "nodeType": "ImportDirective",
        "scope": 6710,
        "sourceUnit": 9606,
        "src": "196:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6426,
              "name": "AwesomeTitle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 95,
              "src": "386:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AwesomeTitle_$95",
                "typeString": "contract AwesomeTitle"
              }
            },
            "id": 6427,
            "nodeType": "InheritanceSpecifier",
            "src": "386:12:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6428,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9267,
              "src": "400:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$9267",
                "typeString": "contract Verifier"
              }
            },
            "id": 6429,
            "nodeType": "InheritanceSpecifier",
            "src": "400:8:3"
          }
        ],
        "contractDependencies": [
          95,
          6420,
          9267,
          9452,
          9556,
          9657,
          9667,
          9752,
          9996,
          10561,
          10898,
          10922,
          11051,
          11079,
          11182,
          11209,
          11232
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6709,
        "linearizedBaseContracts": [
          6709,
          9267,
          95,
          6420,
          9996,
          11079,
          9452,
          10922,
          11051,
          11232,
          10898,
          11209,
          10561,
          11182,
          9657,
          9667,
          9752,
          9556
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6432,
            "libraryName": {
              "contractScope": null,
              "id": 6430,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9605,
              "src": "421:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$9605",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "415:36:3",
            "typeName": {
              "contractScope": null,
              "id": 6431,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9565,
              "src": "434:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9565_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 6434,
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "456:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$9565_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 6433,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9565,
              "src": "456:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$9565_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 6437,
            "name": "_baseTokenURI",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "496:106:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 6435,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "496:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
              "id": 6436,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "537:65:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cfa4573958f09c487edb2f9856efbbf1d5e6472e1155243fcdb5ea3c5dfd2e5a",
                "typeString": "literal_string \"https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/\""
              },
              "value": "https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 6442,
            "members": [
              {
                "constant": false,
                "id": 6439,
                "name": "solutionHash",
                "nodeType": "VariableDeclaration",
                "scope": 6442,
                "src": "710:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 6438,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "710:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6441,
                "name": "someAddress",
                "nodeType": "VariableDeclaration",
                "scope": 6442,
                "src": "740:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6440,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "740:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 6709,
            "src": "684:82:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6445,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "821:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 6443,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 6442,
                "src": "821:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$6442_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 6444,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "821:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6450,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 6709,
            "src": "915:49:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution[])"
            },
            "typeName": {
              "id": 6449,
              "keyType": {
                "id": 6446,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "923:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "915:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 6447,
                  "name": "Solution",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6442,
                  "src": "934:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Solution_$6442_storage_ptr",
                    "typeString": "struct SolnSquareVerifier.Solution"
                  }
                },
                "id": 6448,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "934:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6454,
            "name": "SolutionSubmitted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6452,
                  "indexed": false,
                  "name": "submittedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 6454,
                  "src": "1057:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:21:3"
            },
            "src": "1033:45:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6458,
            "name": "HashCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6456,
                  "indexed": false,
                  "name": "theHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 6458,
                  "src": "1102:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6455,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1101:17:3"
            },
            "src": "1084:35:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6462,
            "name": "AddSolutionCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6460,
                  "indexed": false,
                  "name": "theString",
                  "nodeType": "VariableDeclaration",
                  "scope": 6462,
                  "src": "1148:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6459,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1147:18:3"
            },
            "src": "1124:42:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6466,
            "name": "TestingYo",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6464,
                  "indexed": false,
                  "name": "aString",
                  "nodeType": "VariableDeclaration",
                  "scope": 6466,
                  "src": "1187:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6463,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1186:16:3"
            },
            "src": "1171:32:3"
          },
          {
            "body": {
              "id": 6475,
              "nodeType": "Block",
              "src": "1245:78:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7374727563746f7220666f7220536f6c6e537175617265566572696669657220697320576f726b696e67",
                        "id": 6472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1270:47:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e351046b10c3afeef172f3dd76be946b55efb3c2dd3ab34fe3da50e3dea61725",
                          "typeString": "literal_string \"Constructor for SolnSquareVerifier is Working\""
                        },
                        "value": "Constructor for SolnSquareVerifier is Working"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e351046b10c3afeef172f3dd76be946b55efb3c2dd3ab34fe3da50e3dea61725",
                          "typeString": "literal_string \"Constructor for SolnSquareVerifier is Working\""
                        }
                      ],
                      "id": 6471,
                      "name": "TestingYo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "1260:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6474,
                  "nodeType": "EmitStatement",
                  "src": "1255:63:3"
                }
              ]
            },
            "documentation": null,
            "id": 6476,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 6469,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6468,
                  "name": "AwesomeTitle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "1223:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AwesomeTitle_$95_$",
                    "typeString": "type(contract AwesomeTitle)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1223:14:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1220:2:3"
            },
            "returnParameters": {
              "id": 6470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:0:3"
            },
            "scope": 6709,
            "src": "1209:114:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6493,
              "nodeType": "Block",
              "src": "1393:138:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "544849532049532041205445535420594f21",
                        "id": 6482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5324782bad6bc33ee8ff2a6dbb597cca8848b00ecf3d2c3782c1a7c4053f3e4",
                          "typeString": "literal_string \"THIS IS A TEST YO!\""
                        },
                        "value": "THIS IS A TEST YO!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e5324782bad6bc33ee8ff2a6dbb597cca8848b00ecf3d2c3782c1a7c4053f3e4",
                          "typeString": "literal_string \"THIS IS A TEST YO!\""
                        }
                      ],
                      "id": 6481,
                      "name": "TestingYo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "1408:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6484,
                  "nodeType": "EmitStatement",
                  "src": "1403:36:3"
                },
                {
                  "assignments": [
                    6486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6486,
                      "name": "deepMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 6493,
                      "src": "1449:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 6485,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1449:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6489,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6487,
                      "name": "awesomeTitleTest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1477:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () returns (string memory)"
                      }
                    },
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1449:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 6490,
                        "name": "deepMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6486,
                        "src": "1512:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 6491,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1511:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 6480,
                  "id": 6492,
                  "nodeType": "Return",
                  "src": "1505:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 6494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1350:2:3"
            },
            "returnParameters": {
              "id": 6480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6479,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6494,
                  "src": "1374:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6478,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1373:15:3"
            },
            "scope": 6709,
            "src": "1329:202:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6543,
              "nodeType": "Block",
              "src": "1634:517:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6503,
                          "name": "submittedSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6450,
                          "src": "1648:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                          }
                        },
                        "id": 6505,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6504,
                          "name": "theAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6498,
                          "src": "1667:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1648:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 6506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1648:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1689:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1648:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6541,
                    "nodeType": "Block",
                    "src": "1735:409:3",
                    "statements": [
                      {
                        "body": {
                          "id": 6539,
                          "nodeType": "Block",
                          "src": "1876:258:3",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 6532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 6525,
                                        "name": "submittedSolutions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6450,
                                        "src": "1897:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 6527,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 6526,
                                        "name": "theAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6498,
                                        "src": "1916:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1897:30:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                                      }
                                    },
                                    "id": 6529,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 6528,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6513,
                                      "src": "1928:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1897:33:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Solution_$6442_storage",
                                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                                    }
                                  },
                                  "id": 6530,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "solutionHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6439,
                                  "src": "1897:46:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 6531,
                                  "name": "theHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6496,
                                  "src": "1947:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1897:57:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 6536,
                              "nodeType": "IfStatement",
                              "src": "1894:169:3",
                              "trueBody": {
                                "id": 6535,
                                "nodeType": "Block",
                                "src": "1955:108:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "hexValue": "74727565",
                                      "id": 6533,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1984:4:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 6502,
                                    "id": 6534,
                                    "nodeType": "Return",
                                    "src": "1977:11:3"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 6537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2087:5:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 6502,
                              "id": 6538,
                              "nodeType": "Return",
                              "src": "2080:12:3"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6516,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6513,
                            "src": "1828:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 6517,
                                "name": "submittedSolutions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6450,
                                "src": "1832:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                                }
                              },
                              "id": 6519,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 6518,
                                "name": "theAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6498,
                                "src": "1851:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1832:30:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                                "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                              }
                            },
                            "id": 6520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1832:37:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1828:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6540,
                        "initializationExpression": {
                          "assignments": [
                            6513
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 6513,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 6540,
                              "src": "1816:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 6512,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1816:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 6515,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 6514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1825:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1816:10:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 6523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1871:3:3",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 6522,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6513,
                              "src": "1871:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6524,
                          "nodeType": "ExpressionStatement",
                          "src": "1871:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "1812:322:3"
                      }
                    ]
                  },
                  "id": 6542,
                  "nodeType": "IfStatement",
                  "src": "1644:500:3",
                  "trueBody": {
                    "id": 6511,
                    "nodeType": "Block",
                    "src": "1692:37:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 6509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1713:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 6502,
                        "id": 6510,
                        "nodeType": "Return",
                        "src": "1706:12:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 6544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "solutionExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6496,
                  "name": "theHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 6544,
                  "src": "1561:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6495,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6498,
                  "name": "theAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6544,
                  "src": "1578:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1560:37:3"
            },
            "returnParameters": {
              "id": 6502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6501,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6544,
                  "src": "1624:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6500,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1623:6:3"
            },
            "scope": 6709,
            "src": "1537:614:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6654,
              "nodeType": "Block",
              "src": "2395:784:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "492068617665206265656e2063616c6c6564",
                        "id": 6570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2428:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe92b51bcf44da1b68cc835f5e15c60b81b8d39c7db1c211cf6a54fd91529607",
                          "typeString": "literal_string \"I have been called\""
                        },
                        "value": "I have been called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fe92b51bcf44da1b68cc835f5e15c60b81b8d39c7db1c211cf6a54fd91529607",
                          "typeString": "literal_string \"I have been called\""
                        }
                      ],
                      "id": 6569,
                      "name": "AddSolutionCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6462,
                      "src": "2410:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2410:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6572,
                  "nodeType": "EmitStatement",
                  "src": "2405:44:3"
                },
                {
                  "assignments": [
                    6574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6574,
                      "name": "newHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2459:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6573,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2459:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6584,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6578,
                            "name": "pa",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6548,
                            "src": "2504:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6579,
                            "name": "pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6554,
                            "src": "2508:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata[2] calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6580,
                            "name": "pc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6558,
                            "src": "2512:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6581,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6562,
                            "src": "2516:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata[2] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6576,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11269,
                            "src": "2487:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2487:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2487:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6575,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11276,
                      "src": "2477:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2459:60:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6586,
                        "name": "newHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6574,
                        "src": "2546:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6585,
                      "name": "HashCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6458,
                      "src": "2534:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 6587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2534:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6588,
                  "nodeType": "EmitStatement",
                  "src": "2529:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6591,
                              "name": "newHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6574,
                              "src": "2587:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6592,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6564,
                              "src": "2596:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6590,
                            "name": "solutionExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6544,
                            "src": "2572:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 6593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2572:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 6594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2603:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2572:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e2068617320616c7265616479206265656e207375626d697474656420627920746869732061646472657373",
                        "id": 6596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2610:53:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d6bd88683efc577771fe0a03fc295f0ae96172e940156cc30aca01831ec3a51",
                          "typeString": "literal_string \"Solution has already been submitted by this address\""
                        },
                        "value": "Solution has already been submitted by this address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d6bd88683efc577771fe0a03fc295f0ae96172e940156cc30aca01831ec3a51",
                          "typeString": "literal_string \"Solution has already been submitted by this address\""
                        }
                      ],
                      "id": 6589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11285,
                        11286
                      ],
                      "referencedDeclaration": 11286,
                      "src": "2564:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6598,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:100:3"
                },
                {
                  "assignments": [
                    6600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6600,
                      "name": "isMinted",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2674:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6599,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2674:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6602,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 6601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2690:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2674:21:3"
                },
                {
                  "assignments": [
                    6604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6604,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2784:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 6603,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6442,
                        "src": "2784:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6605,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2784:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6606,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "2821:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 6608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "solutionHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6439,
                      "src": "2821:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6609,
                      "name": "newHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6574,
                      "src": "2848:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2821:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 6611,
                  "nodeType": "ExpressionStatement",
                  "src": "2821:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6612,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "2865:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 6614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "someAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6441,
                      "src": "2865:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6615,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6564,
                      "src": "2891:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2865:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6617,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6622,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6604,
                        "src": "2931:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$6442_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6618,
                          "name": "submittedSolutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6450,
                          "src": "2903:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Solution_$6442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref[] storage ref)"
                          }
                        },
                        "id": 6620,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6619,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6564,
                          "src": "2922:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2903:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$6442_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 6621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2903:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$6442_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 6623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6624,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:40:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11282,
                          "src": "2976:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2976:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6625,
                      "name": "SolutionSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6454,
                      "src": "2958:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2958:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6629,
                  "nodeType": "EmitStatement",
                  "src": "2953:34:3"
                },
                {
                  "assignments": [
                    6631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6631,
                      "name": "solutionIsValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 6654,
                      "src": "2998:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6630,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2998:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6638,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6633,
                        "name": "pa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6548,
                        "src": "3030:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6634,
                        "name": "pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6554,
                        "src": "3033:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6635,
                        "name": "pc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6558,
                        "src": "3036:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6636,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6562,
                        "src": "3039:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      ],
                      "id": 6632,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9266,
                      "src": "3021:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 6637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2998:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6640,
                          "name": "solutionIsValid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6631,
                          "src": "3059:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 6641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3078:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3059:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320736f6c7574696f6e206973206e6f742076616c6964",
                        "id": 6643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3084:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa199b7f016164b1eb1f3e521ea834e5bbfcec1f00835bebe82157889d73dce2",
                          "typeString": "literal_string \"This solution is not valid\""
                        },
                        "value": "This solution is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa199b7f016164b1eb1f3e521ea834e5bbfcec1f00835bebe82157889d73dce2",
                          "typeString": "literal_string \"This solution is not valid\""
                        }
                      ],
                      "id": 6639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11285,
                        11286
                      ],
                      "referencedDeclaration": 11286,
                      "src": "3051:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6645,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:62:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6646,
                      "name": "isMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6600,
                      "src": "3124:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6648,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6564,
                          "src": "3144:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6647,
                        "name": "newTitle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6708,
                        "src": "3135:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) returns (bool)"
                        }
                      },
                      "id": 6649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3135:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3124:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6651,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6652,
                    "name": "isMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6600,
                    "src": "3164:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6568,
                  "id": 6653,
                  "nodeType": "Return",
                  "src": "3157:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 6655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6548,
                  "name": "pa",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2261:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6545,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2261:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6547,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2266:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2261:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6554,
                  "name": "pb",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2282:22:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_calldata_$2_calldata_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 6549,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2282:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6551,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 6550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2287:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2282:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 6553,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2290:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2282:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6558,
                  "name": "pc",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2306:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6555,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2306:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6557,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2311:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2306:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6562,
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2327:18:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6559,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2327:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6561,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 6560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2332:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2327:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6564,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2347:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2260:98:3"
            },
            "returnParameters": {
              "id": 6568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6567,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6655,
                  "src": "2385:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6566,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2384:6:3"
            },
            "scope": 6709,
            "src": "2240:939:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6707,
              "nodeType": "Block",
              "src": "3528:372:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6662,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "3538:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9565_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 6664,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9588,
                      "src": "3538:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$9565_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$9565_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 6665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3538:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6666,
                  "nodeType": "ExpressionStatement",
                  "src": "3538:21:3"
                },
                {
                  "assignments": [
                    6668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6668,
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3569:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6667,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3569:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6672,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6669,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6434,
                        "src": "3589:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$9565_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 6670,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9576,
                      "src": "3589:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$9565_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$9565_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 6671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3589:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3569:39:3"
                },
                {
                  "assignments": [
                    6674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6674,
                      "name": "strTokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3618:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 6673,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3618:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6678,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6676,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6668,
                        "src": "3654:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6675,
                      "name": "uint2str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5268,
                      "src": "3645:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 6677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3645:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3618:46:3"
                },
                {
                  "assignments": [
                    6680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6680,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3674:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6679,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6682,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 6681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3689:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:20:3"
                },
                {
                  "assignments": [
                    6684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6684,
                      "name": "tokenURI",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3704:22:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 6683,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3704:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6685,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3704:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6686,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6684,
                      "src": "3736:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6688,
                          "name": "_baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6437,
                          "src": "3757:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 6689,
                          "name": "strTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6674,
                          "src": "3772:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 6687,
                        "name": "strConcat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4688,
                          4708,
                          4730,
                          4924
                        ],
                        "referencedDeclaration": 4688,
                        "src": "3747:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                          "typeString": "function (string memory,string memory) pure returns (string memory)"
                        }
                      },
                      "id": 6690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3747:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3736:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 6692,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:47:3"
                },
                {
                  "assignments": [
                    6694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6694,
                      "name": "isMinted",
                      "nodeType": "VariableDeclaration",
                      "scope": 6707,
                      "src": "3794:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3794:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6696,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6657,
                        "src": "3815:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6697,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6668,
                        "src": "3819:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6698,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6684,
                        "src": "3830:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6695,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        81,
                        11078
                      ],
                      "referencedDeclaration": 81,
                      "src": "3810:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 6699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3810:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3794:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6701,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6680,
                      "src": "3850:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6702,
                      "name": "isMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6694,
                      "src": "3860:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3850:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6704,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6705,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6680,
                    "src": "3886:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6661,
                  "id": 6706,
                  "nodeType": "Return",
                  "src": "3879:14:3"
                }
              ]
            },
            "documentation": null,
            "id": 6708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newTitle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6657,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6708,
                  "src": "3481:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3480:12:3"
            },
            "returnParameters": {
              "id": 6661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6660,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6708,
                  "src": "3518:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3517:6:3"
            },
            "scope": 6709,
            "src": "3463:437:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 6710,
        "src": "355:3547:3"
      }
    ],
    "src": "0:3903:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x24DFd3A84eed987de9D3F6CB3e157a99aCfC88ca",
      "transactionHash": "0x59d61229234dc10d44e1795a88709cb9e38025b768b9c1504fcbf8b5429dda0c"
    },
    "5777": {
      "events": {
        "0x1b45dbfed9eed246b93226fc0d3554b49038083c727099f41936fc86daa89e56": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "submittedBy",
              "type": "address"
            }
          ],
          "name": "SolutionSubmitted",
          "type": "event",
          "signature": "0x1b45dbfed9eed246b93226fc0d3554b49038083c727099f41936fc86daa89e56"
        },
        "0x1659ad673497ce57a4db5c1bdea2d6f0470485d867eea6f72de074cd91ce4500": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "theHash",
              "type": "bytes32"
            }
          ],
          "name": "HashCreated",
          "type": "event",
          "signature": "0x1659ad673497ce57a4db5c1bdea2d6f0470485d867eea6f72de074cd91ce4500"
        },
        "0x9fe701af713820c8db29ef40f4e42f170626962cb1c9443cf9b55b1fa75a9e9d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "theString",
              "type": "string"
            }
          ],
          "name": "AddSolutionCalled",
          "type": "event",
          "signature": "0x9fe701af713820c8db29ef40f4e42f170626962cb1c9443cf9b55b1fa75a9e9d"
        },
        "0x01a87e7a3d231b634c1b6d4af78b689c56e577b096c765c761a9d79d482cd427": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "aString",
              "type": "string"
            }
          ],
          "name": "TestingYo",
          "type": "event",
          "signature": "0x01a87e7a3d231b634c1b6d4af78b689c56e577b096c765c761a9d79d482cd427"
        },
        "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "s",
              "type": "string"
            }
          ],
          "name": "Verified",
          "type": "event",
          "signature": "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39"
        },
        "0x4098b352452230ea930d67f8facfd384517785aa9126fcf14ba93b94b8180fdb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "aString",
              "type": "string"
            }
          ],
          "name": "AwesomeTitleTest",
          "type": "event",
          "signature": "0x4098b352452230ea930d67f8facfd384517785aa9126fcf14ba93b94b8180fdb"
        },
        "0x9b8632543f9271d60587df495e216b6b2cd0c5c7f6ec5ff48d89f540830e14d6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "aString",
              "type": "string"
            }
          ],
          "name": "AwesomeTitleTest2",
          "type": "event",
          "signature": "0x9b8632543f9271d60587df495e216b6b2cd0c5c7f6ec5ff48d89f540830e14d6"
        },
        "0x6f24cf36bfd89e3dbb90646858861aef2b00e5027c88411a24cafe1a12f60068": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "isSuccessful",
              "type": "bool"
            }
          ],
          "name": "AwesomeTitleMint",
          "type": "event",
          "signature": "0x6f24cf36bfd89e3dbb90646858861aef2b00e5027c88411a24cafe1a12f60068"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event",
          "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event",
          "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
        },
        "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserAdded",
          "type": "event",
          "signature": "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        },
        "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserRemoved",
          "type": "event",
          "signature": "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e"
        }
      },
      "links": {},
      "address": "0xd70d2A21fcC8FFB32Da08ab4cC65874c1d0fEd71",
      "transactionHash": "0x4041a5b75016143aa116b7296a335d12b0de1f15cedf1eada0ea4b057bb9342a"
    },
    "1570814363154": {
      "events": {
        "0x1b45dbfed9eed246b93226fc0d3554b49038083c727099f41936fc86daa89e56": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "submittedBy",
              "type": "address"
            }
          ],
          "name": "SolutionSubmitted",
          "type": "event",
          "signature": "0x1b45dbfed9eed246b93226fc0d3554b49038083c727099f41936fc86daa89e56"
        },
        "0x1659ad673497ce57a4db5c1bdea2d6f0470485d867eea6f72de074cd91ce4500": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "theHash",
              "type": "bytes32"
            }
          ],
          "name": "HashCreated",
          "type": "event",
          "signature": "0x1659ad673497ce57a4db5c1bdea2d6f0470485d867eea6f72de074cd91ce4500"
        },
        "0x9fe701af713820c8db29ef40f4e42f170626962cb1c9443cf9b55b1fa75a9e9d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "theString",
              "type": "string"
            }
          ],
          "name": "AddSolutionCalled",
          "type": "event",
          "signature": "0x9fe701af713820c8db29ef40f4e42f170626962cb1c9443cf9b55b1fa75a9e9d"
        },
        "0x01a87e7a3d231b634c1b6d4af78b689c56e577b096c765c761a9d79d482cd427": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "aString",
              "type": "string"
            }
          ],
          "name": "TestingYo",
          "type": "event",
          "signature": "0x01a87e7a3d231b634c1b6d4af78b689c56e577b096c765c761a9d79d482cd427"
        },
        "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "s",
              "type": "string"
            }
          ],
          "name": "Verified",
          "type": "event",
          "signature": "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39"
        },
        "0x4098b352452230ea930d67f8facfd384517785aa9126fcf14ba93b94b8180fdb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "aString",
              "type": "string"
            }
          ],
          "name": "AwesomeTitleTest",
          "type": "event",
          "signature": "0x4098b352452230ea930d67f8facfd384517785aa9126fcf14ba93b94b8180fdb"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xabff555127bade302c37aa37cf777fc2eaf468a57a5206ae1aeaf289d81f191d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "aString",
              "type": "string"
            }
          ],
          "name": "SuperTesting",
          "type": "event",
          "signature": "0xabff555127bade302c37aa37cf777fc2eaf468a57a5206ae1aeaf289d81f191d"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event",
          "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event",
          "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
        },
        "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserAdded",
          "type": "event",
          "signature": "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        },
        "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserRemoved",
          "type": "event",
          "signature": "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e"
        }
      },
      "links": {},
      "address": "0x3c43493ca8e7BDFA174ee77a05bC44f1986fDA41",
      "transactionHash": "0xc49c1d9123319d4c5714087cab1609c05b34e79b3046743bb0ffda16a42101fb"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-10-13T03:09:10.224Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}