// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let Verifier = artifacts.require('Verifier');
var p   = require(__dirname + '/../test/proof.json').proof;
var i   = require(__dirname + '/../test/proof.json').inputs;
var ni  = require(__dirname + '/../test/negativeProof.json').inputs;


// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

describe('Verify proof.json working', function () {
    beforeEach(async function() {
        this.contract = await Verifier.new();
    })
    it('should be able to verify proof', async function () {

        let actual = await this.contract.verifyTx.call(p.a, p.b, p.c,i);

        let expected = true;
        assert.equal(actual, expected, "Verifier failed.");

    });
    // Test verification with incorrect proof
    it('should fail with incorrect proof', async function () {
        let actual = await this.contract.verifyTx.call(p.a, p.b, p.c,ni);

        let expected = false;
        assert.equal(actual, expected, "Verifier failed (negative testing).");

    });
});
